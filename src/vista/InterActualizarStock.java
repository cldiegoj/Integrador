package vista;

import ConexionSQL.Conectar;
import Modelo.Producto;
import ModeloDAO.ProductoDAO;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author ediso
 */
public class InterActualizarStock extends javax.swing.JInternalFrame {

    //variables
    int idProducto = 0;
    int cantidad = 0;

    public InterActualizarStock() {
        initComponents();
        setTitle("Actualizar Stock de los Productos");

        this.CargarComboProductos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox_producto1 = new javax.swing.JComboBox<>();
        txt_cantidad_actual1 = new javax.swing.JTextField();
        txt_cantidad_nueva1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnGuardar1 = new javax.swing.JButton();
        btnAtras1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 198, 89));

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MENÚ - STOCK DE PRODUCTOS");
        jPanel4.add(jLabel2);

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 30));

        jPanel5.setBackground(new java.awt.Color(252, 248, 232));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Stock actual:");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, -1, -1));

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Producto:");
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, -1));

        jComboBox_producto1.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        jComboBox_producto1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_producto1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione producto:", "Item 2", "Item 3", "Item 4" }));
        jComboBox_producto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_producto1ActionPerformed(evt);
            }
        });
        jPanel5.add(jComboBox_producto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, 180, -1));

        txt_cantidad_actual1.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        txt_cantidad_actual1.setForeground(new java.awt.Color(0, 0, 0));
        txt_cantidad_actual1.setEnabled(false);
        jPanel5.add(txt_cantidad_actual1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 180, -1));

        txt_cantidad_nueva1.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        txt_cantidad_nueva1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(txt_cantidad_nueva1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 180, -1));

        jLabel10.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Stock nuevo:");
        jPanel5.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, -1));

        btnGuardar1.setBackground(new java.awt.Color(252, 248, 232));
        btnGuardar1.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        btnGuardar1.setForeground(new java.awt.Color(0, 0, 0));
        btnGuardar1.setText("ACTUALIZAR");
        btnGuardar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), null, null));
        btnGuardar1.setContentAreaFilled(false);
        btnGuardar1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });
        jPanel5.add(btnGuardar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 190, 30));

        btnAtras1.setBackground(new java.awt.Color(252, 248, 232));
        btnAtras1.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        btnAtras1.setForeground(new java.awt.Color(0, 0, 0));
        btnAtras1.setText("ATRÁS");
        btnAtras1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), null, null));
        btnAtras1.setContentAreaFilled(false);
        btnAtras1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtras1ActionPerformed(evt);
            }
        });
        jPanel5.add(btnAtras1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 170, 30));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 570, 220));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_productoActionPerformed
        this.MostrarStock();
    }//GEN-LAST:event_jComboBox_productoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void jComboBox_producto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_producto1ActionPerformed
        this.MostrarStock();
    }//GEN-LAST:event_jComboBox_producto1ActionPerformed

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        //validamos seleccion del producto
        if (!jComboBox_producto1.getSelectedItem().equals("Seleccione producto:")) {
            //Validamos campos vacios
            if (!txt_cantidad_nueva1.getText().isEmpty()) {
                //validamos que el usuario no ingrese otros caracteres no numericos
                boolean validacion = validar(txt_cantidad_nueva1.getText().trim());
                if (validacion == true) {
                    //validar que la cantidad sea mayor cero (0)
                    if (Integer.parseInt(txt_cantidad_nueva1.getText()) > 0) {

                        Producto producto = new Producto();
                        ProductoDAO productodao = new ProductoDAO();
                        int stockActual = Integer.parseInt(txt_cantidad_actual1.getText().trim());
                        int stockNuevo = Integer.parseInt(txt_cantidad_nueva1.getText().trim());

                        stockNuevo = stockActual + stockNuevo;
                        producto.setStock(stockNuevo);
                        if (productodao.actualizarStock(producto, idProducto)) {
                            JOptionPane.showMessageDialog(null, "Stock Actualizado");
                            jComboBox_producto1.setSelectedItem("Seleccione producto:");
                            txt_cantidad_actual1.setText("");
                            txt_cantidad_nueva1.setText("");
                            this.CargarComboProductos();
                        } else {
                            JOptionPane.showMessageDialog(null, "Error al Actualizar Stock");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "La cantidad no puede ser cero ni negativa");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "En la cantidad no se admiten caracteres no numericos");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese una nueva cantidad para sumar el stock del producto");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un producto");
        }
    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void btnAtras1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtras1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnAtras1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras1;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JComboBox<String> jComboBox_producto1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField txt_cantidad_actual1;
    private javax.swing.JTextField txt_cantidad_nueva1;
    // End of variables declaration//GEN-END:variables

    //Metodo para caragar los productos en el jComboBox
    private void CargarComboProductos() {

        Connection cn = Conectar.getConexion();
        String sql = "select * from PRODUCTO";
        Statement st;
        try {

            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_producto1.removeAllItems();
            jComboBox_producto1.addItem("Seleccione producto:");
            while (rs.next()) {
                jComboBox_producto1.addItem(rs.getString("prod_nom"));
            }

        } catch (SQLException e) {
            System.out.println("Error al cargar los productos en: " + e);
        }

    }

    //metodo para mostrar stock del producto seleccionado
    private void MostrarStock() {
        try {

            Connection cn = Conectar.getConexion();
            String sql = "select * from PRODUCTO where prod_nom = '" + this.jComboBox_producto1.getSelectedItem() + "'";
            Statement st;
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            if (rs.next()) {
                idProducto = rs.getInt("prod_cod");
                cantidad = rs.getInt("prod_stk");
                txt_cantidad_actual1.setText(String.valueOf(cantidad));
            } else {
                txt_cantidad_actual1.setText("");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener stock del producto en: " + e);
        }
    }

    //metodo de validacion de caracteres no numericos
    private boolean validar(String valor) {
        int num;
        try {
            num = Integer.parseInt(valor);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

}
